" Configurando vim-plug para gestão de plugins.
if empty(glob('~/.vim/autoload/plug.vim'))
  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
    \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif
call plug#begin()
Plug 'ctrlpvim/ctrlp.vim'
Plug 'vim-airline/vim-airline'
Plug 'scrooloose/nerdtree'
Plug 'Xuyuanp/nerdtree-git-plugin'
Plug 'airblade/vim-gitgutter'
Plug 'MattesGroeger/vim-bookmarks'
Plug 'tpope/vim-fugitive'
Plug 'dart-lang/dart-vim-plugin'
Plug 'natebosch/vim-lsc'
Plug 'natebosch/vim-lsc-dart'
Plug 'thosakwe/vim-flutter'
Plug 'andys8/vim-elm-syntax', { 'for': ['elm'] }
Plug 'neoclide/coc.nvim', { 'branch': 'release' }
Plug 'alvan/vim-closetag'
Plug 'google/vim-searchindex'
call plug#end()

" Highlighting e cores.
syntax on
color industry

" Adiciona uma marcação na coluna 81, indicando que a linha está muito longa. 
highlight ColorColumn ctermbg=magenta 
call matchadd('ColorColumn', '\%81v', 100)

" Destaca tabs e espaços no final das linha.
exec "set listchars=tab:\uBB\uBB,trail:\uB7,nbsp:~"
set list

" Deixa 7 linhas acima e abaixo quando estiver movendo com j e k.
set so=7

" Configurações do wildmenu (auto completar o tab mais eficiência/visual).
set wildmenu
set wildmode=longest:list,full

" Exibe caracter que faz 'match' com o caracter selecionado atualmente.
set showmatch
set mat=2

" Remove toolbar no gvim
set guioptions-=T

" Configurando nerdtree e o exibe caso nenhum arquivo tenha sido aberto.
autocmd StdinReadPre * let s:std_in=1
autocmd VimEnter * if argc() == 0 && !exists("s:std_in") | NERDTree | endif
let g:NERDTreeWinPos = "right"
" Mapeia o C-n para abri-lo.
map <C-n> :NERDTreeToggle<CR>
" Fecha o vim caso feche demais buffers e sobre apenas o nerdtree.
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif

" Destaca resultado de busca.
set hlsearch

" Recarrega caso arquivo tenha sido alterado fora do vim.
set autoread

" Desabilita as setas (útil para perder o hábito de usa-las).
noremap <Up> <NOP>
noremap <Down> <NOP>
noremap <Left> <NOP>
noremap <Right> <NOP>

" Atalho (nt) para criar nova tab.
 nnoremap nt :tabnew<CR>

" Ao realizar uma busca, quando chegar ao fim, não volte ao começo.
set nowrapscan

" Usar por padrão o clipboard para copiar de texto.
if has("clipboard")
  set clipboard=unnamed

  if has("unnamedplus") " Suporte ao X11. 
    set clipboard+=unnamedplus
  endif
endif

" Desabilitando criação de arquivos de swap.
set noswapfile

" Identação de código.
filetype plugin indent on

" Se string de busca for toda minúscula, faça uma busca case insensitive.
set smartcase

" Melhora regex.
set magic

" Desabilita sons em caso de erros.
set belloff=all

" Por padrão usar utf-8 e unix.
set encoding=utf8
set ffs=unix,dos,mac

" Plugin de busca (ctr + p).
let g:ctrlp_custom_ignore = '\v[\/](node_modules|target|dist)|(\.(swp|ico|git|svn))$'  

" Exibir número da linha corrente.
set number
set ruler

" Tabs e indentação.
set autoindent
set smartindent
set shiftwidth=2
set expandtab
set tabstop=2

" F10 para habilitar ou desabilitar modo paste.
set pastetoggle=<F10> 

" Configurando vim-airline (tabs).
let g:airline#extensions#tabline#enabled = 1

" Configurando atalhos para o flutter.
nnoremap <leader>fa :FlutterRun --release --flavor dev -t lib/main_dev.dart<cr>
nnoremap <leader>fq :FlutterQuit<cr>
nnoremap <leader>fr :FlutterHotReload<cr>
nnoremap <leader>fR :FlutterHotRestart<cr>
nnoremap <leader>fD :FlutterVisualDebug<cr>

let g:ctrlp_root_markers = ['.ctrlp']

" Configurando vim-lsc.
let g:lsc_auto_map = {
    \ 'GoToDefinition': '<C-]>',
    \ 'GoToDefinitionSplit': ['<C-W>]', '<C-W><C-]>'],
    \ 'FindReferences': 'gr',
    \ 'NextReference': '<C-n>',
    \ 'FindImplementations': 'gI',
    \ 'FindCodeActions': 'ga',
    \ 'Rename': 'gR',
    \ 'ShowHover': v:true,
    \ 'DocumentSymbol': 'go',
    \ 'WorkspaceSymbol': 'gS',
    \ 'SignatureHelp': 'gm',
    \ 'Completion': 'completefunc',
    \}

" Melhorando visualizacao de mensagens de erro
set cmdheight=3

" Configurando coc
nmap <leader>rn <Plug>(coc-rename)

" Spell
autocmd BufRead,BufNewFile *.txt setlocal spell spelllang=pt_br
set complete+=kspell
